int tar = (int)str[0];         //卡号的首位位标记位
			bool flag = true;              //防止误读标记
			if (tar == 144 || tar == 16) {
				strcpy(no, "1607094270");  //A card
			}
			else if (tar == 17 || tar == 49) {
				strcpy(no, "1607094271");  //B card
			}
			else if (tar == 135 || tar == 199) {
				strcpy(no, "1607094272");  //C card
			}
			else if (tar == 233) {
				strcpy(no, "1607094273");  //D card
			}
			else {
				flag = false;              //未检测到数据
			}
			if (flag) {
				printf("已检测到学生学号：%s, 状态：%d\n", no, tar);
				char sql[255] = "select * from student where no = \'";
				strcat(sql, no);
				strcat(sql, "\'");
				cout << sql << endl;
				res = mysql_query(&myCont, sql);                    //查询
				if (!res)
				{
					result = mysql_store_result(&myCont);           //把查询的数据从服务器端取到客户端，然后缓存起来，放在句柄mysql里面
					if (result)
					{
						sql_row = mysql_fetch_row(result);          //将查询结构保存在一个数组里
						if (sql_row)                                //有该学生
						{
							cout << "该学生是本宿舍学生，通过" << endl;
							if (strcmp(sql_row[2], "0") == 0) {     //状态为0要更新为1
								strcpy(sql, "update student set status=1 where no=");
								strcat(sql, sql_row[0]);

								if (!mysql_query(&myCont, sql)) {
									cout << "该学生进入宿舍" << endl;
								}
								else {
									cout << "shibai1" << endl;
									cout << mysql_error(&myCont) << endl;
								}
							}
							else if (strcmp(sql_row[2], "1") == 0) { //状态为1要更新成0
								strcpy(sql, "update student set status=0 where no=");
								strcat(sql, sql_row[0]);

								if (!mysql_query(&myCont, sql)) {
									cout << "该学生离开宿舍" << endl;
								}
								else {
									cout << "shibai2" << endl;
									cout << mysql_error(&myCont) << endl;
								}
							}
						}
						else                                         //无该学生
						{
							cout << "该学生不是本宿舍学生，警报" << endl;
							WriteFile(hCom, "1", 4, &yCount, NULL);  //串口写错误信息1
						}
							
					}
				}
				else
				{
					cout << "error：查询数据库失败" << endl;
				}
			}
			else {
				cout << "error：读卡失误请重新放置卡片" << endl;
			}