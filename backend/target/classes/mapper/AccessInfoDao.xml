<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.nam.dormitorymanage.backend.dao.AccessInfoDao">

    <select id="getStudnetNum" resultType="Integer">
        SELECT student_num
        FROM card_info
        WHERE card_num = #{cardNum}
    </select>

    <select id="judgeAccess" resultType="Integer">
        SELECT room_num
        FROM student_info
        WHERE building_num = #{buildingNum}
            AND num = #{studentNum}
    </select>

    <select id="getPreStatus" resultType="Integer">
        SELECT access_status
        FROM access_info
        WHERE building_num = #{buildingNum}
            AND student_num = #{studentNum}
        ORDER BY access_time DESC
        LIMIT 1
    </select>

    <insert id="addAccess">
        INSERT INTO access_info (building_num, student_num, access_status)
        VALUES (#{buildingNum}, #{studentNum}, #{accessStatus})
    </insert>

    <insert id="addBlock">
        INSERT INTO block_info (building_num, student_num)
        VALUES (#{buildingNum}, #{studentNum})
    </insert>

    <select id="getTodayInOutSum" resultType="AccessCount">
        SELECT CASE access_status
                WHEN 1 THEN 'in'
                ELSE 'out'
            END AS type, COUNT(*) AS num
        FROM access_info
        WHERE building_num = #{buildingNum}
            AND access_time >= #{dawnTime}
        GROUP BY access_status
    </select>

    <select id="getTodayBlockInfo" resultType="BlockInfo">
        SELECT s.name AS student_name, s.num, s.teacher_tel, b.building_num, b.access_time
        FROM block_info b
            INNER JOIN student_info s ON b.student_num = s.num
        WHERE b.building_num = #{buildingNum}
            AND b.access_time >= #{dawnTime}
        ORDER BY access_time DESC
    </select>

    <select id="getOutStudentInfo" resultType="StudentInfo">
        SELECT num, name, school, major, teacher_name
                ,teacher_tel, building_num, room_num
        FROM student_info
        WHERE num IN (
            SELECT student_num
            FROM (
                SELECT student_num, access_time, access_status
                FROM access_info x
                WHERE building_num = #{buildingNum}
                     AND access_time = (
                        SELECT Max(access_time)
                        FROM access_info y
                        WHERE x.student_num = y.student_num
                    )
                ) temp
            WHERE temp.access_status = -1
        )
    </select>

</mapper>